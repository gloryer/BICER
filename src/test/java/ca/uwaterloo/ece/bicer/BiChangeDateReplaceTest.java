package ca.uwaterloo.ece.bicer;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;

import org.junit.Test;
import ca.uwaterloo.ece.bicer.data.BIChange;
import ca.uwaterloo.ece.bicer.utils.Utils;

/*
 * Compare biChanged generated by BICER and sanitized one. Since the sanitized one has bugs in BISha1 as there is a bug (blamed in a wrong line num) in previous tool.
 * By the comparison, we can identify lines that require manual analysis whether a line is actually BI line.
 * by 'j22nam' at '27/05/16 5:45 PM' with Gradle 2.13
 *
 * @author j22nam, @date 27/05/16 5:45 PM
 */
public class BiChangeDateReplaceTest {
    @Test public void testSomeLibraryMethod() {
    	
    	String project ="lucene";
    	String dir = System.getProperty("user.home") + "/Documents/UW/ODP/projects/" + project +"/";
        
    	String pathForBIChangeDateSource = dir + "biChangesBICER.txt";
    	String pathForBIChangesDateTarget = dir + "biChangesBICERManuallyFiltered_beforeTimeZoneIssueSolved.txt";
    	String pathForBIChangesDateToSave = dir + "biChangesBICERManuallyFiltered.txt";
    	
    	ArrayList<BIChange> biChangesDateSource = loadBIChanges(pathForBIChangeDateSource, false);
    	ArrayList<BIChange> biChangesDateTarget = loadBIChanges(pathForBIChangesDateTarget, false);
    	
    	ArrayList<String> lines = new ArrayList<String>();
    	lines.add("BISha1	oldPath	Path	FixSha1	BIDate	FixDate	LineNumInBI	LineNumInPreFix	isAddedLine	Line");
    	
    	int i=0;
    	for(BIChange biChangeSource:biChangesDateSource){
    		
    		for(BIChange biChangeTarget:biChangesDateTarget){
        		if(biChangeSource.getBISha1().equals(biChangeTarget.getBISha1())
        				&&
        				biChangeSource.getFixSha1().equals(biChangeTarget.getFixSha1())
        				&&
        				biChangeSource.getPath().equals(biChangeTarget.getPath())
        				&&
        				biChangeSource.getLineNumInPrevFixRev() == biChangeTarget.getLineNumInPrevFixRev()
        				&&
        				biChangeSource.getLine().equals(biChangeTarget.getLine())
        				)
        				{
        			
        			biChangeTarget.setBIDate(biChangeSource.getBIDate());
        			biChangeTarget.setFixDate(biChangeSource.getFixDate());
        			lines.add(biChangeTarget.getRecord());
        			i++;
        			break;
        		}
        	}	
    	}
    	
    	Utils.writeAFile(lines, pathForBIChangesDateToSave);
    	
    	System.out.println("Total # of biChanges: " + biChangesDateTarget.size());
    	System.out.println("Total # of dates replaced: " + i);
    	
	}
    
    private ArrayList<BIChange> loadBIChanges(String path,boolean forSanitizer) {
		ArrayList<String> BIChangeInfo = Utils.getLines(path, true); // Sanitizer file does not have header line, so remove it.
		ArrayList<BIChange> biChanges = new ArrayList<BIChange>();
		for(String info: BIChangeInfo){
			biChanges.add(new BIChange(info,forSanitizer));
		}
		
		return biChanges;
	}
}
